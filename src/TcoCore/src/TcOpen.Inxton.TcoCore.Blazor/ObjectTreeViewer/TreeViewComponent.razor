@namespace TcoCore
@inherits RenderableComplexComponentBase<IVortexObject>

<h3>TreeViewComponent</h3>

@if (Children != null)
{
@*<TreeView Nodes="Children"
          GetChildNodes="@(item => item.GetChildren())"
          HasChildNodes="@(item => item.GetChildren().Any() == true)"
          @bind-SelectedNode="selectedNode2"
          @bind-ExpandedNodes="ExpandedNodes2">
    <NodeContent>@context.Symbol</NodeContent>
</TreeView>*@
}

@code {

    public TreeViewWrapper TreeObject { get; set; }

    protected override void OnInitialized()
    {

        Children = Component.GetChildren();
        //Children = TreeObject.Children;
    }

    public class Item
    {
        public string Text { get; set; }
        public IEnumerable<Item> Children { get; set; }
    }

    IEnumerable<IVortexObject> Children;

    IList<IVortexObject> ExpandedNodes2 = new List<IVortexObject>();
    IVortexObject selectedNode2;



    IEnumerable<Item> Items = new[]
{
        new Item { Text = "Item 1" },
        new Item {
            Text = "Item 2",
            Children = new []
        {
                new Item { Text = "Item 2.1" },
                new Item { Text = "Item 2.2", Children = new []
            {
                    new Item { Text = "Item 2.2.1" },
                    new Item { Text = "Item 2.2.2" },
                    new Item { Text = "Item 2.2.3" },
                    new Item { Text = "Item 2.2.4" }
                }
            },
            new Item { Text = "Item 2.3" },
            new Item { Text = "Item 2.4" }
            }
        },
        new Item { Text = "Item 3" },
    };

    IList<Item> ExpandedNodes = new List<Item>();
    Item selectedNode;
}
